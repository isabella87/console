REM Generated at 2019-01-15 09:58:03
REM PRODUCT VERSION: Oracle Database 11g Enterprise Edition  11.2.0.3.0 64bit Production
REM USER: ACC

REM Create common procedures
CREATE OR REPLACE PROCEDURE "DROP_TABLE_IF_EXISTS" (V_TABLE_NAME VARCHAR2) IS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE ' || V_TABLE_NAME;
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE <> -0942 THEN
      RAISE;
    END IF;
END DROP_TABLE_IF_EXISTS;
/
CREATE OR REPLACE PROCEDURE "DROP_SEQUENCE_IF_EXISTS" (V_SEQUENCE_NAME VARCHAR2) IS
BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE ' || V_SEQUENCE_NAME;
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE <> -2289 THEN
      RAISE;
    END IF;
END DROP_SEQUENCE_IF_EXISTS;
/

REM Drop tables
CALL DROP_TABLE_IF_EXISTS('ACC_ORIGIN_RUNNING');
CALL DROP_TABLE_IF_EXISTS('ACC_JX_USER');
CALL DROP_TABLE_IF_EXISTS('ACC_CORP_INFO');
CALL DROP_TABLE_IF_EXISTS('TS_WITHDRAW');
CALL DROP_TABLE_IF_EXISTS('TS_UNBIND_CARD');
CALL DROP_TABLE_IF_EXISTS('TS_TERMS_AUTH');
CALL DROP_TABLE_IF_EXISTS('TS_REPAY_AUTH');
CALL DROP_TABLE_IF_EXISTS('TS_PROXY_REPAY_FRZ');
CALL DROP_TABLE_IF_EXISTS('TS_PAYMENT_AUTH');
CALL DROP_TABLE_IF_EXISTS('TS_ORIGIN_HISTORY');
CALL DROP_TABLE_IF_EXISTS('TS_DIRECT_RECHARGE');
CALL DROP_TABLE_IF_EXISTS('TS_CREDIT_FOR_UNLOAD');
CALL DROP_TABLE_IF_EXISTS('TS_CREDIT_FOR_LOAD');
CALL DROP_TABLE_IF_EXISTS('TS_CHANGE_MOBILE');
CALL DROP_TABLE_IF_EXISTS('TS_BIND_CARD');
CALL DROP_TABLE_IF_EXISTS('TS_ACCOUNT_OPEN');
CALL DROP_TABLE_IF_EXISTS('MSG_SMS_YM');
CALL DROP_TABLE_IF_EXISTS('MSG_REG_USER');
CALL DROP_TABLE_IF_EXISTS('MSG_LOST_PWD');
CALL DROP_TABLE_IF_EXISTS('MSG_CHANGE_MOBILE');
CALL DROP_TABLE_IF_EXISTS('ACC_USER_REG_PWD_HISTORY');
CALL DROP_TABLE_IF_EXISTS('ACC_USER_REG');
CALL DROP_TABLE_IF_EXISTS('ACC_PERSON_INFO');
CALL DROP_TABLE_IF_EXISTS('ACC_MESSAGE');
CALL DROP_TABLE_IF_EXISTS('ACC_LOGIN_SIGN_IN');
CALL DROP_TABLE_IF_EXISTS('ACC_LEVEL_SCORE');
CALL DROP_TABLE_IF_EXISTS('ACC_INNER_USER_REG');
CALL DROP_TABLE_IF_EXISTS('ACC_FRIENDS_PATH');
CALL DROP_TABLE_IF_EXISTS('ACC_FRIENDS');
CALL DROP_TABLE_IF_EXISTS('ACC_EXT_FLAGS');
/

REM Create Table ACC_EXT_FLAGS
CREATE TABLE "ACC_EXT_FLAGS" (
	"AU_ID" NUMBER NOT NULL,
	"P1" NUMBER DEFAULT 0 NOT NULL,
	"P2" NUMBER DEFAULT 0 NOT NULL,
	"P3" NUMBER DEFAULT 0 NOT NULL,
	"P4" NUMBER DEFAULT 0 NOT NULL,
	"P5" NUMBER DEFAULT 0 NOT NULL
);
COMMENT ON TABLE "ACC_EXT_FLAGS" IS '是否是新手标标志表';
REM Column comments ACC_EXT_FLAGS
COMMENT ON COLUMN "ACC_EXT_FLAGS"."AU_ID" IS '用户id';
COMMENT ON COLUMN "ACC_EXT_FLAGS"."P1" IS '用户的新手标状态,1是新手标状态，0非新手标状态';
REM Primary key ACC_EXT_FLAGS
ALTER TABLE "ACC_EXT_FLAGS" ADD CONSTRAINT "" PRIMARY KEY () USING INDEX;
/

REM Create Table ACC_FRIENDS
CREATE TABLE "ACC_FRIENDS" (
	"A_ID" NUMBER NOT NULL,
	"D_ID" NUMBER NOT NULL,
	"BALANCE" NUMBER NULL
);
REM Column comments ACC_FRIENDS
COMMENT ON COLUMN "ACC_FRIENDS"."A_ID" IS '祖先节点';
COMMENT ON COLUMN "ACC_FRIENDS"."D_ID" IS '后代节点';
COMMENT ON COLUMN "ACC_FRIENDS"."BALANCE" IS '账户余额';
REM Primary key ACC_FRIENDS
ALTER TABLE "ACC_FRIENDS" ADD CONSTRAINT "ACC_FRIENDS_PK" PRIMARY KEY (D_ID) USING INDEX;
/

REM Create Table ACC_FRIENDS_PATH
CREATE TABLE "ACC_FRIENDS_PATH" (
	"A_ID" NUMBER NOT NULL,
	"D_ID" NUMBER NULL,
	"DEPTH" NUMBER NULL
);
REM Column comments ACC_FRIENDS_PATH
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."A_ID" IS '祖先节点';
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."D_ID" IS '后代节点';
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."DEPTH" IS '度';
REM Primary key ACC_FRIENDS_PATH
ALTER TABLE "ACC_FRIENDS_PATH" ADD CONSTRAINT "ACC_FRIENDS_PATH_PK" PRIMARY KEY (A_ID) USING INDEX;
/

REM Create Table ACC_INNER_USER_REG
CREATE TABLE "ACC_INNER_USER_REG" (
	"AU_ID" NUMBER NULL
);
COMMENT ON TABLE "ACC_INNER_USER_REG" IS '内部用户表';
REM Column comments ACC_INNER_USER_REG
REM Primary key ACC_INNER_USER_REG
ALTER TABLE "ACC_INNER_USER_REG" ADD CONSTRAINT "" PRIMARY KEY () USING INDEX;
/

REM Create Table ACC_LEVEL_SCORE
CREATE TABLE "ACC_LEVEL_SCORE" (
	"AU_ID" NUMBER NOT NULL,
	"SCORE" NUMBER DEFAULT 0 NULL
);
COMMENT ON TABLE "ACC_LEVEL_SCORE" IS '用户投资评级分数表';
REM Column comments ACC_LEVEL_SCORE
COMMENT ON COLUMN "ACC_LEVEL_SCORE"."AU_ID" IS '用户id';
COMMENT ON COLUMN "ACC_LEVEL_SCORE"."SCORE" IS '用户投资评级积分';
REM Primary key ACC_LEVEL_SCORE
ALTER TABLE "ACC_LEVEL_SCORE" ADD CONSTRAINT "" PRIMARY KEY () USING INDEX;
/

REM Create Table ACC_LOGIN_SIGN_IN
CREATE TABLE "ACC_LOGIN_SIGN_IN" (
	"AU_ID" NUMBER NOT NULL,
	"SIGN_DATE" VARCHAR2(10) NOT NULL
);
COMMENT ON TABLE "ACC_LOGIN_SIGN_IN" IS '会员签到表';
REM Column comments ACC_LOGIN_SIGN_IN
COMMENT ON COLUMN "ACC_LOGIN_SIGN_IN"."AU_ID" IS '用户id';
COMMENT ON COLUMN "ACC_LOGIN_SIGN_IN"."SIGN_DATE" IS '签到日期,年月日，如2018-01-01';
REM Primary key ACC_LOGIN_SIGN_IN
ALTER TABLE "ACC_LOGIN_SIGN_IN" ADD CONSTRAINT "ACC_LOGIN_SIGN_IN_PK" PRIMARY KEY (AU_ID,SIGN_DATE) USING INDEX;
/

REM Create Table ACC_MESSAGE
CREATE TABLE "ACC_MESSAGE" (
	"AM_ID" NUMBER NOT NULL,
	"CONTENT" VARCHAR2(4000 CHAR) NOT NULL,
	"CREATE_TIME" DATE NOT NULL,
	"CREATOR" VARCHAR2(1280 CHAR) NOT NULL,
	"TITLE" VARCHAR2(1280 CHAR) NOT NULL,
	"BRIEF" VARCHAR2(4000 CHAR) NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"READ_TIME" DATE NULL,
	"TYPE" NUMBER DEFAULT 1 NULL
);
REM Column comments ACC_MESSAGE
COMMENT ON COLUMN "ACC_MESSAGE"."AM_ID" IS '主键';
COMMENT ON COLUMN "ACC_MESSAGE"."CONTENT" IS '消息内容';
COMMENT ON COLUMN "ACC_MESSAGE"."CREATE_TIME" IS '消息推送时间';
COMMENT ON COLUMN "ACC_MESSAGE"."CREATOR" IS '推送者';
COMMENT ON COLUMN "ACC_MESSAGE"."TITLE" IS '标题';
COMMENT ON COLUMN "ACC_MESSAGE"."BRIEF" IS '摘要';
COMMENT ON COLUMN "ACC_MESSAGE"."READ_TIME" IS '已读时间';
COMMENT ON COLUMN "ACC_MESSAGE"."TYPE" IS '消息类型（1，普通消息；2，借款人协议签署消息；）';
REM Primary key ACC_MESSAGE
ALTER TABLE "ACC_MESSAGE" ADD CONSTRAINT "ACC_MESSAGE_PK" PRIMARY KEY (AM_ID) USING INDEX;
/

REM Create Table ACC_PERSON_INFO
CREATE TABLE "ACC_PERSON_INFO" (
	"AU_ID" NUMBER NOT NULL,
	"ADDRESS" VARCHAR2(2000 CHAR) NULL,
	"HOME_PHONE" VARCHAR2(2000 CHAR) NULL,
	"POSTAL_CODE" VARCHAR2(2000 CHAR) NULL,
	"POSITION" VARCHAR2(2000 CHAR) NULL,
	"COMPANY" VARCHAR2(2000 CHAR) NULL,
	"COMPANY_TYPE" VARCHAR2(2000 CHAR) NULL,
	"QQ_NUMBER" VARCHAR2(2000 CHAR) NULL,
	"UPDATE_TIME" DATE NULL,
	"CREATE_TIME" DATE NULL,
	"REAL_NAME" VARCHAR2(2000 CHAR) NULL,
	"ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"EMAIL" VARCHAR2(2000 CHAR) NULL,
	"ORG_CODE" VARCHAR2(2000 CHAR) NULL
);
REM Column comments ACC_PERSON_INFO
COMMENT ON COLUMN "ACC_PERSON_INFO"."AU_ID" IS '主键';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ADDRESS" IS '通讯地址';
COMMENT ON COLUMN "ACC_PERSON_INFO"."HOME_PHONE" IS '家庭电话';
COMMENT ON COLUMN "ACC_PERSON_INFO"."POSTAL_CODE" IS '邮政编码';
COMMENT ON COLUMN "ACC_PERSON_INFO"."POSITION" IS '职务';
COMMENT ON COLUMN "ACC_PERSON_INFO"."COMPANY" IS '工作单位';
COMMENT ON COLUMN "ACC_PERSON_INFO"."COMPANY_TYPE" IS '单位类型';
COMMENT ON COLUMN "ACC_PERSON_INFO"."QQ_NUMBER" IS 'qq号码';
COMMENT ON COLUMN "ACC_PERSON_INFO"."UPDATE_TIME" IS '修改时间';
COMMENT ON COLUMN "ACC_PERSON_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "ACC_PERSON_INFO"."REAL_NAME" IS '真实姓名';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ID_CARD" IS '身份证';
COMMENT ON COLUMN "ACC_PERSON_INFO"."EMAIL" IS '邮箱';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ORG_CODE" IS '所属企业编号';
REM Primary key ACC_PERSON_INFO
ALTER TABLE "ACC_PERSON_INFO" ADD CONSTRAINT "ACC_PERSON_INFO_PK" PRIMARY KEY (AU_ID) USING INDEX;
/

REM Create Table ACC_USER_REG
CREATE TABLE "ACC_USER_REG" (
	"AU_ID" NUMBER NOT NULL,
	"LOGIN_NAME" VARCHAR2(640 CHAR) NOT NULL,
	"PASSWORD" VARCHAR2(3200 CHAR) NOT NULL,
	"USER_TYPE" NUMBER(3) NOT NULL,
	"RECOMMEND_MOBILE" VARCHAR2(1280 CHAR) NULL,
	"STATUS" NUMBER(3) NOT NULL,
	"REG_TIME" DATE NOT NULL,
	"AUDITOR" VARCHAR2(4000 CHAR) NULL,
	"AUDIT_TIME" DATE NULL,
	"ALLOW_INVEST" NUMBER DEFAULT 0 NULL,
	"ALLOW_BORROW" NUMBER DEFAULT 0 NULL,
	"MOBILE" VARCHAR2(80 CHAR) NULL,
	"REC_INFO_MODI_COUNT" NUMBER(2) DEFAULT 0 NULL,
	"OLD_INVEST_COUNT" NUMBER DEFAULT 0 NULL,
	"SRC" NUMBER(2) DEFAULT 0 NOT NULL,
	"LOCKED" NUMBER DEFAULT 0 NOT NULL,
	"LAST_LOGIN_FAILED_DATE" DATE NULL,
	"LOGIN_FAILED_COUNT" NUMBER DEFAULT 0 NULL,
	"GESTURE_PWD" VARCHAR2(1600) NULL,
	"GESTURE_PWD_STATUS" NUMBER NULL,
	"UUID" VARCHAR2(100) NULL,
	"OLD_LOGIN_NAME" VARCHAR2(320) NULL,
	"ALLOW_COMMUTATE" NUMBER DEFAULT 0 NULL
);
REM Column comments ACC_USER_REG
COMMENT ON COLUMN "ACC_USER_REG"."AU_ID" IS '主键';
COMMENT ON COLUMN "ACC_USER_REG"."LOGIN_NAME" IS '用户名';
COMMENT ON COLUMN "ACC_USER_REG"."PASSWORD" IS '密码';
COMMENT ON COLUMN "ACC_USER_REG"."USER_TYPE" IS '用户类型（1个人,2机构）';
COMMENT ON COLUMN "ACC_USER_REG"."RECOMMEND_MOBILE" IS '推荐人手机号';
COMMENT ON COLUMN "ACC_USER_REG"."STATUS" IS '用户状态。1已注册；2已开户；';
COMMENT ON COLUMN "ACC_USER_REG"."REG_TIME" IS '注册时间';
COMMENT ON COLUMN "ACC_USER_REG"."AUDITOR" IS '审核人id';
COMMENT ON COLUMN "ACC_USER_REG"."AUDIT_TIME" IS '审核时间';
COMMENT ON COLUMN "ACC_USER_REG"."ALLOW_INVEST" IS '是否允许投资, 0不允许,  1:允许';
COMMENT ON COLUMN "ACC_USER_REG"."ALLOW_BORROW" IS '是否允许借款  0不允许,  1:允许';
COMMENT ON COLUMN "ACC_USER_REG"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "ACC_USER_REG"."REC_INFO_MODI_COUNT" IS '推荐码（手机号）默认修改次数';
COMMENT ON COLUMN "ACC_USER_REG"."OLD_INVEST_COUNT" IS '老系统上投资次数';
COMMENT ON COLUMN "ACC_USER_REG"."SRC" IS '注册来源 0-未知 1-PC 2-移动端  (20180815 增加可表示来自不同的第三方)';
COMMENT ON COLUMN "ACC_USER_REG"."LOCKED" IS '代表锁定 状态  0未锁，98自动锁定，99手动锁定';
COMMENT ON COLUMN "ACC_USER_REG"."LAST_LOGIN_FAILED_DATE" IS '最后一次失败登录时间';
COMMENT ON COLUMN "ACC_USER_REG"."LOGIN_FAILED_COUNT" IS '最近5分钟失败登录次数';
COMMENT ON COLUMN "ACC_USER_REG"."GESTURE_PWD" IS '手势密码';
COMMENT ON COLUMN "ACC_USER_REG"."GESTURE_PWD_STATUS" IS '手势密码状态（0未设置；1已设置未启用；2已启用；98 锁定；99 停用）';
COMMENT ON COLUMN "ACC_USER_REG"."UUID" IS '手机唯一标识码';
COMMENT ON COLUMN "ACC_USER_REG"."OLD_LOGIN_NAME" IS '原登录名';
COMMENT ON COLUMN "ACC_USER_REG"."ALLOW_COMMUTATE" IS '是否允许代偿  0不允许,  1:允许';
REM Primary key ACC_USER_REG
ALTER TABLE "ACC_USER_REG" ADD CONSTRAINT "ACC_USER_REG_PK" PRIMARY KEY (AU_ID) USING INDEX;
/

REM Create Table ACC_USER_REG_PWD_HISTORY
CREATE TABLE "ACC_USER_REG_PWD_HISTORY" (
	"ID" NUMBER NOT NULL,
	"OPERATOR" NUMBER NULL,
	"OPERATE_TIME" DATE NULL,
	"SOURCE" NUMBER NULL,
	"VCODE" VARCHAR2(1280 CHAR) NULL
);
REM Column comments ACC_USER_REG_PWD_HISTORY
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."OPERATOR" IS '注册表au_id（0表后台插入）';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."OPERATE_TIME" IS '操作时间';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."SOURCE" IS '来源（1手机验证码方式，9后台手动插入方式';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."VCODE" IS '验证码';
REM Primary key ACC_USER_REG_PWD_HISTORY
ALTER TABLE "ACC_USER_REG_PWD_HISTORY" ADD CONSTRAINT "ACC_USER_REG_PWD_HISTORY_PK" PRIMARY KEY (ID) USING INDEX;
/

REM Create Table MSG_CHANGE_MOBILE
CREATE TABLE "MSG_CHANGE_MOBILE" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(3200 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(320 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_CHANGE_MOBILE
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."M_ID" IS 'id。';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."MOBILE" IS '手机号';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."V_CODE" IS '验证码';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."STATUS" IS '0：未验证过，已验证（使用过）';
REM Primary key MSG_CHANGE_MOBILE
ALTER TABLE "MSG_CHANGE_MOBILE" ADD CONSTRAINT "MSG_CHANGE_MOBILE_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_LOST_PWD
CREATE TABLE "MSG_LOST_PWD" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(3200 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(320 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_LOST_PWD
COMMENT ON COLUMN "MSG_LOST_PWD"."M_ID" IS '主键';
COMMENT ON COLUMN "MSG_LOST_PWD"."MOBILE" IS '手机号';
COMMENT ON COLUMN "MSG_LOST_PWD"."V_CODE" IS '激活码';
COMMENT ON COLUMN "MSG_LOST_PWD"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_LOST_PWD"."STATUS" IS '状态。0未验证，1已验证（已使用）';
REM Primary key MSG_LOST_PWD
ALTER TABLE "MSG_LOST_PWD" ADD CONSTRAINT "MSG_LOST_PWD_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_REG_USER
CREATE TABLE "MSG_REG_USER" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(4000 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(640 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_REG_USER
COMMENT ON COLUMN "MSG_REG_USER"."M_ID" IS 'id。';
COMMENT ON COLUMN "MSG_REG_USER"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "MSG_REG_USER"."V_CODE" IS '验证码';
COMMENT ON COLUMN "MSG_REG_USER"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_REG_USER"."STATUS" IS '0：未验证。1：已验证（已使用过）';
REM Primary key MSG_REG_USER
ALTER TABLE "MSG_REG_USER" ADD CONSTRAINT "MSG_REG_USER_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_SMS_YM
CREATE TABLE "MSG_SMS_YM" (
	"MOBILE" VARCHAR2(4000 CHAR) NOT NULL,
	"CONTENT" VARCHAR2(4000 CHAR) NOT NULL,
	"T_CODE" NUMBER NOT NULL,
	"P_ID" NUMBER NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL,
	"RETRY_COUNT" NUMBER DEFAULT 0 NOT NULL,
	"S_CODE" NUMBER DEFAULT 0 NOT NULL,
	"ERROR" VARCHAR2(4000 CHAR) NULL,
	"DATEPOINT" DATE NOT NULL,
	"DATEPOINT2" DATE NULL,
	"MS_ID" NUMBER NOT NULL
);
REM Column comments MSG_SMS_YM
COMMENT ON COLUMN "MSG_SMS_YM"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "MSG_SMS_YM"."CONTENT" IS '内容';
COMMENT ON COLUMN "MSG_SMS_YM"."T_CODE" IS '业务操作表的类型，1 - 用户注册  ,2 - 丢失密码 ,3 - 修改手机，4 - 合同签章';
COMMENT ON COLUMN "MSG_SMS_YM"."P_ID" IS '关联的业务操作表的ID';
COMMENT ON COLUMN "MSG_SMS_YM"."DATEPOINT" IS '插入记录的时间';
REM Primary key MSG_SMS_YM
ALTER TABLE "MSG_SMS_YM" ADD CONSTRAINT "MSG_SMS_YM_PK" PRIMARY KEY (MS_ID) USING INDEX;
/

REM Create Table TS_ACCOUNT_OPEN
CREATE TABLE "TS_ACCOUNT_OPEN" (
	"TAO_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"NAME" VARCHAR2(100 CHAR) NOT NULL,
	"IDNO" VARCHAR2(100 CHAR) NULL,
	"MOBILE" VARCHAR2(100 CHAR) NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL,
	"IDENTITY" NUMBER NOT NULL,
	"EMAIL" VARCHAR2(50) NULL,
	"GENDER" VARCHAR2(20) NULL
);
REM Column comments TS_ACCOUNT_OPEN
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."TAO_ID" IS '开户业务id';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."NAME" IS '姓名';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."IDNO" IS '证件号码（待废弃）';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."STATUS" IS '状态,0-未成功 1-已成功';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."DATEPOINT" IS '交易完成时间';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."IDENTITY" IS '身份属性：1-出借人  2-借款人';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."EMAIL" IS '电子账户号';
COMMENT ON COLUMN "TS_ACCOUNT_OPEN"."GENDER" IS '性别 M-男   F-女';
REM Primary key TS_ACCOUNT_OPEN
ALTER TABLE "TS_ACCOUNT_OPEN" ADD CONSTRAINT "TS_BIND_CARD1_PK" PRIMARY KEY (TAO_ID) USING INDEX;
/

REM Create Table TS_BIND_CARD
CREATE TABLE "TS_BIND_CARD" (
	"TBC_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"USER_IP" VARCHAR2(50) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL
);
REM Column comments TS_BIND_CARD
COMMENT ON COLUMN "TS_BIND_CARD"."TBC_ID" IS '绑卡业务id';
COMMENT ON COLUMN "TS_BIND_CARD"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_BIND_CARD"."USER_IP" IS '用户ip';
COMMENT ON COLUMN "TS_BIND_CARD"."STATUS" IS '状态：0-未成功 1-已成功';
COMMENT ON COLUMN "TS_BIND_CARD"."DATEPOINT" IS '交易完成时间';
REM Primary key TS_BIND_CARD
ALTER TABLE "TS_BIND_CARD" ADD CONSTRAINT "TS_BIND_CARD_PK" PRIMARY KEY (TBC_ID) USING INDEX;
/

REM Create Table TS_CHANGE_MOBILE
CREATE TABLE "TS_CHANGE_MOBILE" (
	"TCM_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL
);
REM Column comments TS_CHANGE_MOBILE
COMMENT ON COLUMN "TS_CHANGE_MOBILE"."TCM_ID" IS '修改即信手机号业务id';
COMMENT ON COLUMN "TS_CHANGE_MOBILE"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_CHANGE_MOBILE"."STATUS" IS '状态：0-未成功  1-已成功';
COMMENT ON COLUMN "TS_CHANGE_MOBILE"."DATEPOINT" IS '交易完成时间';
REM Primary key TS_CHANGE_MOBILE
ALTER TABLE "TS_CHANGE_MOBILE" ADD CONSTRAINT "TS_CHANGE_MOBILE_PK" PRIMARY KEY (TCM_ID) USING INDEX;
/

REM Create Table TS_CREDIT_FOR_LOAD
CREATE TABLE "TS_CREDIT_FOR_LOAD" (
	"TCFL_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"AMT" NUMBER(12,2) NULL,
	"USER_IP" VARCHAR2(100 CHAR) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL
);
REM Column comments TS_CREDIT_FOR_LOAD
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."TCFL_ID" IS '圈存业务id';
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."AU_ID" IS '圈存用户id';
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."AMT" IS '圈存金额';
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."USER_IP" IS '用户ip';
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."STATUS" IS '状态： 0-未成功 1-已成功';
COMMENT ON COLUMN "TS_CREDIT_FOR_LOAD"."DATEPOINT" IS '交易完成时间';
REM Primary key TS_CREDIT_FOR_LOAD
ALTER TABLE "TS_CREDIT_FOR_LOAD" ADD CONSTRAINT "TS_CREDIT_FOR_LOAD_PK" PRIMARY KEY (TCFL_ID) USING INDEX;
/

REM Create Table TS_CREDIT_FOR_UNLOAD
CREATE TABLE "TS_CREDIT_FOR_UNLOAD" (
	"TCFU_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"AMT" NUMBER(12,2) NULL,
	"FEE" NUMBER(12,2) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL
);
REM Column comments TS_CREDIT_FOR_UNLOAD
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."TCFU_ID" IS '圈提业务id';
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."AU_ID" IS '圈提用户id';
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."AMT" IS '圈提金额';
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."FEE" IS '圈提手续费';
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."STATUS" IS '状态：0-未完成 1-已完成';
COMMENT ON COLUMN "TS_CREDIT_FOR_UNLOAD"."DATEPOINT" IS '交易完成时间';
REM Primary key TS_CREDIT_FOR_UNLOAD
ALTER TABLE "TS_CREDIT_FOR_UNLOAD" ADD CONSTRAINT "TS_CREDIT_FOR_UNLOAD_PK" PRIMARY KEY (TCFU_ID) USING INDEX;
/

REM Create Table TS_DIRECT_RECHARGE
CREATE TABLE "TS_DIRECT_RECHARGE" (
	"TDR_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL,
	"DATEPOINT" DATE NULL,
	"AMT" NUMBER NOT NULL,
	"USER_IP" VARCHAR2(50) NULL
);
REM Column comments TS_DIRECT_RECHARGE
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."TDR_ID" IS '充值业务表';
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."STATUS" IS '状态：0-未成功  1-已成功';
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."DATEPOINT" IS '交易完成时间';
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."AMT" IS '充值金额';
COMMENT ON COLUMN "TS_DIRECT_RECHARGE"."USER_IP" IS '用户IP';
REM Primary key TS_DIRECT_RECHARGE
ALTER TABLE "TS_DIRECT_RECHARGE" ADD CONSTRAINT "TS_DIRECT_RECHARGE_PAGE_PK" PRIMARY KEY (TDR_ID) USING INDEX;
/

REM Create Table TS_ORIGIN_HISTORY
CREATE TABLE "TS_ORIGIN_HISTORY" (
	"DATEPOINT" VARCHAR2(32 CHAR) NOT NULL,
	"RETRY_COUNT" NUMBER DEFAULT 0 NOT NULL,
	"RETCODE" VARCHAR2(160 CHAR) NULL,
	"RETMSG" VARCHAR2(160 CHAR) NULL,
	"DONE" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments TS_ORIGIN_HISTORY
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."DATEPOINT" IS '日期';
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."RETRY_COUNT" IS '重试次数';
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."DONE" IS '是否已下载';
REM Primary key TS_ORIGIN_HISTORY
ALTER TABLE "TS_ORIGIN_HISTORY" ADD CONSTRAINT "TS_ORIGIN_HISTORY_PK" PRIMARY KEY (DATEPOINT) USING INDEX;
/

REM Create Table TS_PAYMENT_AUTH
CREATE TABLE "TS_PAYMENT_AUTH" (
	"TPA_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"MAX_AMT" NUMBER(18,2) DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL,
	"REMARK" VARCHAR2(4000 CHAR) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DEAD_LINE" DATE NULL
);
REM Column comments TS_PAYMENT_AUTH
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."TPA_ID" IS '主键，缴费授权业务id';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."AU_ID" IS '用户号';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."MAX_AMT" IS '最大签约金额';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."DATEPOINT" IS '交易完成的时间点。此字段是 确认交易完成的时间 ，而不是交易发起的时间。';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."REMARK" IS '备注';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."STATUS" IS '状态。0未成功，1已成功。';
COMMENT ON COLUMN "TS_PAYMENT_AUTH"."DEAD_LINE" IS '签约截止日期';
REM Primary key TS_PAYMENT_AUTH
ALTER TABLE "TS_PAYMENT_AUTH" ADD CONSTRAINT "TS_PAYMENT_AUTH_PK" PRIMARY KEY (TPA_ID) USING INDEX;
/

REM Create Table TS_PROXY_REPAY_FRZ
CREATE TABLE "TS_PROXY_REPAY_FRZ" (
	"TPRF_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"AMT" NUMBER NOT NULL,
	"DATEPOINT" DATE NULL,
	"STATUS" NUMBER(6) NOT NULL,
	"ORDER_NO" VARCHAR2(100) NULL
);
REM Column comments TS_PROXY_REPAY_FRZ
COMMENT ON COLUMN "TS_PROXY_REPAY_FRZ"."TPRF_ID" IS '代偿冻结业务id';
COMMENT ON COLUMN "TS_PROXY_REPAY_FRZ"."AU_ID" IS '代偿用户id';
COMMENT ON COLUMN "TS_PROXY_REPAY_FRZ"."AMT" IS '冻结金额';
COMMENT ON COLUMN "TS_PROXY_REPAY_FRZ"."DATEPOINT" IS '交易完成时间';
COMMENT ON COLUMN "TS_PROXY_REPAY_FRZ"."STATUS" IS '状态：0-未成功 1-已成功';
REM Primary key TS_PROXY_REPAY_FRZ
ALTER TABLE "TS_PROXY_REPAY_FRZ" ADD CONSTRAINT "TS_PROXY_REPAY_FRZ_PK" PRIMARY KEY (TPRF_ID) USING INDEX;
/

REM Create Table TS_REPAY_AUTH
CREATE TABLE "TS_REPAY_AUTH" (
	"TRA_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"MAX_AMT" NUMBER(18,2) NULL,
	"DATEPOINT" DATE NULL,
	"REMARK" VARCHAR2(4000 CHAR) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DEAD_LINE" DATE NULL
);
REM Column comments TS_REPAY_AUTH
COMMENT ON COLUMN "TS_REPAY_AUTH"."TRA_ID" IS '主键，还款授权业务id';
COMMENT ON COLUMN "TS_REPAY_AUTH"."AU_ID" IS '用户号';
COMMENT ON COLUMN "TS_REPAY_AUTH"."MAX_AMT" IS '最大签约金额';
COMMENT ON COLUMN "TS_REPAY_AUTH"."DATEPOINT" IS '交易完成的时间点。此字段是 确认交易完成的时间 ，而不是交易发起的时间。';
COMMENT ON COLUMN "TS_REPAY_AUTH"."REMARK" IS '备注';
COMMENT ON COLUMN "TS_REPAY_AUTH"."STATUS" IS '状态。0未成功，1已成功。';
COMMENT ON COLUMN "TS_REPAY_AUTH"."DEAD_LINE" IS '签约截止日期';
REM Primary key TS_REPAY_AUTH
ALTER TABLE "TS_REPAY_AUTH" ADD CONSTRAINT "" PRIMARY KEY () USING INDEX;
/

REM Create Table TS_TERMS_AUTH
CREATE TABLE "TS_TERMS_AUTH" (
	"TTA_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"AUTH_TYPE" NUMBER NULL,
	"OPERATION_TYPE" NUMBER NULL,
	"MAX_AMT" NUMBER(18,2) NULL,
	"DATEPOINT" DATE NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DEAD_LINE" DATE NULL
);
REM Column comments TS_TERMS_AUTH
COMMENT ON COLUMN "TS_TERMS_AUTH"."TTA_ID" IS '多合一授权业务id';
COMMENT ON COLUMN "TS_TERMS_AUTH"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_TERMS_AUTH"."OPERATION_TYPE" IS '操作类型：0-取消（未开放此功能） 1-开通 空-不操作';
COMMENT ON COLUMN "TS_TERMS_AUTH"."MAX_AMT" IS '自动投标签约最高金额';
COMMENT ON COLUMN "TS_TERMS_AUTH"."DATEPOINT" IS '交易时间';
COMMENT ON COLUMN "TS_TERMS_AUTH"."STATUS" IS '交易状态：0-未完成  1-已成功';
COMMENT ON COLUMN "TS_TERMS_AUTH"."DEAD_LINE" IS '自动投标签约截止日期';
REM Primary key TS_TERMS_AUTH
ALTER TABLE "TS_TERMS_AUTH" ADD CONSTRAINT "TS_TERMS_AUTH_PK" PRIMARY KEY (TTA_ID) USING INDEX;
/

REM Create Table TS_UNBIND_CARD
CREATE TABLE "TS_UNBIND_CARD" (
	"TUC_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"DATEPOINT" DATE NULL
);
REM Column comments TS_UNBIND_CARD
COMMENT ON COLUMN "TS_UNBIND_CARD"."TUC_ID" IS '存管平台电子账户签约卡绑定关系取消';
COMMENT ON COLUMN "TS_UNBIND_CARD"."AU_ID" IS '用户id';
COMMENT ON COLUMN "TS_UNBIND_CARD"."STATUS" IS '状态 0-未完成  1-已完成';
COMMENT ON COLUMN "TS_UNBIND_CARD"."DATEPOINT" IS '交易完成时间';
REM Primary key TS_UNBIND_CARD
ALTER TABLE "TS_UNBIND_CARD" ADD CONSTRAINT "TS_UNBIND_CARD_PK" PRIMARY KEY (TUC_ID) USING INDEX;
/

REM Create Table TS_WITHDRAW
CREATE TABLE "TS_WITHDRAW" (
	"TW_ID" NUMBER NOT NULL,
	"AU_ID" NUMBER NULL,
	"AMT" NUMBER(18,2) NULL,
	"DATEPOINT" DATE NULL,
	"BANK_CNAPS" VARCHAR2(200 CHAR) NULL,
	"STATUS" NUMBER DEFAULT 0 NULL,
	"ROUTE_CODE" VARCHAR2(20) NULL,
	"TX_FEE" NUMBER NULL
);
REM Column comments TS_WITHDRAW
COMMENT ON COLUMN "TS_WITHDRAW"."TW_ID" IS '主键，提现业务id';
COMMENT ON COLUMN "TS_WITHDRAW"."AU_ID" IS '提现用户au_id';
COMMENT ON COLUMN "TS_WITHDRAW"."AMT" IS '提现金额';
COMMENT ON COLUMN "TS_WITHDRAW"."DATEPOINT" IS '交易完成的时间点。此字段是 确认交易完成的时间 ，而不是交易发起的时间。';
COMMENT ON COLUMN "TS_WITHDRAW"."BANK_CNAPS" IS '绑定银行联行号.人民银行分配的12位联行号';
COMMENT ON COLUMN "TS_WITHDRAW"."STATUS" IS '状态。0未成功，1已成功。';
COMMENT ON COLUMN "TS_WITHDRAW"."ROUTE_CODE" IS '路由代码';
COMMENT ON COLUMN "TS_WITHDRAW"."TX_FEE" IS '提现手续费';
REM Primary key TS_WITHDRAW
ALTER TABLE "TS_WITHDRAW" ADD CONSTRAINT "TS_WITHDRAW_PK" PRIMARY KEY (TW_ID) USING INDEX;
/

REM Create Table ACC_CORP_INFO
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_CORP_INFO" (
	"AU_ID" NUMBER NOT NULL,
	"ORG_NAME" VARCHAR2(2000 CHAR) NULL,
	"BUSS_LIC" VARCHAR2(2000 CHAR) NULL,
	"TAX_LIC" VARCHAR2(2000 CHAR) NULL,
	"ORG_CODE_NO" VARCHAR2(2000 CHAR) NULL,
	"LAW_NAME" VARCHAR2(2000 CHAR) NULL,
	"LAW_ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"ACC_USER_NAME" VARCHAR2(2000 CHAR) NULL,
	"ACCOUNT" VARCHAR2(2000 CHAR) NULL,
	"ACC_BANK" VARCHAR2(2000 CHAR) NULL,
	"CREATE_TIME" DATE NULL,
	"UPDATE_TIME" DATE NULL,
	"REAL_NAME" VARCHAR2(2000 CHAR) NULL,
	"POSITION" VARCHAR2(2000 CHAR) NULL,
	"ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"COMPANY" VARCHAR2(2000 CHAR) NULL,
	"COMPANY_TYPE" VARCHAR2(2000 CHAR) NULL,
	"ADDRESS" VARCHAR2(2000 CHAR) NULL,
	"POSTAL_CODE" VARCHAR2(2000 CHAR) NULL,
	"HOME_PHONE" VARCHAR2(2000 CHAR) NULL,
	"QQ_NUMBER" VARCHAR2(2000 CHAR) NULL,
	"EMAIL" VARCHAR2(2000 CHAR) NULL
);
REM Column comments ACC_CORP_INFO
COMMENT ON COLUMN "ACC_CORP_INFO"."ORG_NAME" IS '机构名称';
COMMENT ON COLUMN "ACC_CORP_INFO"."BUSS_LIC" IS '营业执照号';
COMMENT ON COLUMN "ACC_CORP_INFO"."TAX_LIC" IS '税务登记证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ORG_CODE_NO" IS '组织机构代码证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."LAW_NAME" IS '法人姓名';
COMMENT ON COLUMN "ACC_CORP_INFO"."LAW_ID_CARD" IS '法人身份证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACC_USER_NAME" IS '银行账户户名';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACCOUNT" IS '银行账号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACC_BANK" IS '银行账户开户行';
COMMENT ON COLUMN "ACC_CORP_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "ACC_CORP_INFO"."UPDATE_TIME" IS '更新时间';
COMMENT ON COLUMN "ACC_CORP_INFO"."REAL_NAME" IS '姓名';
COMMENT ON COLUMN "ACC_CORP_INFO"."POSITION" IS '职务';
COMMENT ON COLUMN "ACC_CORP_INFO"."ID_CARD" IS '身份证';
COMMENT ON COLUMN "ACC_CORP_INFO"."COMPANY" IS '工作单位';
COMMENT ON COLUMN "ACC_CORP_INFO"."COMPANY_TYPE" IS '单位类型';
COMMENT ON COLUMN "ACC_CORP_INFO"."ADDRESS" IS '通讯地址';
COMMENT ON COLUMN "ACC_CORP_INFO"."POSTAL_CODE" IS '邮政编码';
COMMENT ON COLUMN "ACC_CORP_INFO"."HOME_PHONE" IS '家庭电话';
COMMENT ON COLUMN "ACC_CORP_INFO"."QQ_NUMBER" IS 'qq号码';
COMMENT ON COLUMN "ACC_CORP_INFO"."EMAIL" IS '邮箱';
REM Primary key ACC_CORP_INFO
ALTER TABLE "ACC_CORP_INFO" ADD CONSTRAINT "ACC_CORP_INFO_PK" PRIMARY KEY (AU_ID) USING INDEX;
REM Foreign keys ACC_CORP_INFO
ALTER TABLE "ACC_CORP_INFO" ADD CONSTRAINT "ACC_CORP_INFO_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Create Table ACC_JX_USER
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_JX_USER" (
	"AU_ID" NUMBER NOT NULL,
	"USER_ID" VARCHAR2(2000 CHAR) NULL,
	"RECARD" VARCHAR2(2000 CHAR) NULL,
	"NAME" VARCHAR2(1920 CHAR) NULL,
	"ID_CARD" VARCHAR2(576 CHAR) NULL,
	"MOBILE" VARCHAR2(384 CHAR) NULL,
	"DATEPOINT" DATE NULL,
	"ID_TYPE" VARCHAR2(80 CHAR) NULL,
	"AUTO_TENDER_AUTH" NUMBER NULL,
	"MAX_AUTO_TENDER_AMT" NUMBER NULL,
	"PWD_SET" NUMBER(1) DEFAULT 0 NULL,
	"IDENTITY" NUMBER NULL,
	"PAY_AUTH" NUMBER(1) DEFAULT 0 NULL,
	"REPAY_AUTH" NUMBER(1) DEFAULT 0 NULL,
	"TERMS_AUTH" NUMBER DEFAULT 0 NULL
);
REM Column comments ACC_JX_USER
COMMENT ON COLUMN "ACC_JX_USER"."USER_ID" IS '即信电子账户';
COMMENT ON COLUMN "ACC_JX_USER"."RECARD" IS '绑定卡号';
COMMENT ON COLUMN "ACC_JX_USER"."NAME" IS '持卡人姓名';
COMMENT ON COLUMN "ACC_JX_USER"."ID_CARD" IS '身份证号';
COMMENT ON COLUMN "ACC_JX_USER"."MOBILE" IS '手机号';
COMMENT ON COLUMN "ACC_JX_USER"."ID_TYPE" IS '01(18位身份证号码），02（15位身份证号码），20（组织机构代码），25（社会信用号）';
COMMENT ON COLUMN "ACC_JX_USER"."PWD_SET" IS '是否设置银行卡密码.0表示未设置,1已设置';
COMMENT ON COLUMN "ACC_JX_USER"."IDENTITY" IS '1：出借角色 2：借款角色 3：代偿角色';
COMMENT ON COLUMN "ACC_JX_USER"."PAY_AUTH" IS '是否设置缴费授权，0：未设置， 1： 已设置';
COMMENT ON COLUMN "ACC_JX_USER"."REPAY_AUTH" IS '是否设置还款授权，0： 为设置， 1： 已设置';
COMMENT ON COLUMN "ACC_JX_USER"."TERMS_AUTH" IS '是否授权 0-未设置 1-已设置';
REM Primary key ACC_JX_USER
ALTER TABLE "ACC_JX_USER" ADD CONSTRAINT "ACC_JX_USER_PK" PRIMARY KEY (AU_ID) USING INDEX;
REM Foreign keys ACC_JX_USER
ALTER TABLE "ACC_JX_USER" ADD CONSTRAINT "ACC_JX_USER_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Create Table ACC_ORIGIN_RUNNING
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_ORIGIN_RUNNING" (
	"BANK" NUMBER(4) NULL,
	"AU_ID" NUMBER NULL,
	"CARDNBR" VARCHAR2(76 CHAR) NULL,
	"AMOUNT" NUMBER(17,2) NULL,
	"CRFLAG" VARCHAR2(4 CHAR) NULL,
	"DATEPOINT" DATE NULL,
	"TRANNO" NUMBER(20) NOT NULL,
	"ORI_TRANNO" NUMBER(20) NULL,
	"TRANSTYPE" NUMBER(4) NULL,
	"DESLINE" VARCHAR2(168 CHAR) NULL,
	"CURR_BAL" NUMBER(17,2) NULL,
	"FORCARDNBR" VARCHAR2(76 CHAR) NULL,
	"FOR_AU_ID" NUMBER NULL,
	"REVIND" NUMBER NULL
);
REM Column comments ACC_ORIGIN_RUNNING
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."BANK" IS '银行号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."AU_ID" IS '用户au_id';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CARDNBR" IS '电子账号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."AMOUNT" IS '交易金额';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CRFLAG" IS '交易金额符号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."DATEPOINT" IS '交易日期';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."TRANNO" IS '交易流水号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."ORI_TRANNO" IS '该交易为手续费交易时，关联流水号为原交易的流水号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."TRANSTYPE" IS '交易类型';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."DESLINE" IS '交易描述';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CURR_BAL" IS '交易后余额';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."FORCARDNBR" IS '对手交易帐号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."FOR_AU_ID" IS '对手用户au_iud';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."REVIND" IS '冲正、撤销标志(2-已撤销/冲正
空或1-正常交易)';
REM Primary key ACC_ORIGIN_RUNNING
ALTER TABLE "ACC_ORIGIN_RUNNING" ADD CONSTRAINT "ACC_ORIGIN_RUNNING_PK" PRIMARY KEY (TRANNO) USING INDEX;
REM Foreign keys ACC_ORIGIN_RUNNING
ALTER TABLE "ACC_ORIGIN_RUNNING" ADD CONSTRAINT "ACC_ORIGIN_RUNNING_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Drop sequences
CALL DROP_SEQUENCE_IF_EXISTS('TS_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_SMS_YM_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_SMS_MW_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_ID');
CALL DROP_SEQUENCE_IF_EXISTS('LOG_ID');
CALL DROP_SEQUENCE_IF_EXISTS('AU_ID');
CALL DROP_SEQUENCE_IF_EXISTS('AM_ID');
/

REM Create sequence AM_ID
CREATE SEQUENCE "AM_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence AU_ID
CREATE SEQUENCE "AU_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence LOG_ID
CREATE SEQUENCE "LOG_ID" MINVALUE 1 MAXVALUE 99999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_ID
CREATE SEQUENCE "MSG_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_SMS_MW_ID
CREATE SEQUENCE "MSG_SMS_MW_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_SMS_YM_ID
CREATE SEQUENCE "MSG_SMS_YM_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence TS_ID
CREATE SEQUENCE "TS_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create view ACC_USER
CREATE OR REPLACE VIEW "ACC_USER" AS
SELECT AU_ID, REG.LOGIN_NAME, REG.MOBILE, COALESCE(P.REAL_NAME, C.ORG_NAME) REAL_NAME, REG_TIME AS REG_DATE, STATUS, "LOCKED", ALLOW_INVEST, ALLOW_BORROW, RECOMMEND_MOBILE R_CODE
FROM ACC.ACC_USER_REG REG
LEFT JOIN ACC.ACC_PERSON_INFO P USING (AU_ID)
LEFT JOIN ACC.ACC_CORP_INFO C USING (AU_ID);
/


